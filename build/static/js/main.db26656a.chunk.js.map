{"version":3,"sources":["stores/SubmitButton.js","stores/UserStore.js","stores/InputField.js","stores/LoginForm.js","tav.png","login.js","reportWebVitals.js","index.js"],"names":["SubmitButton","className","disabled","this","props","onClick","text","React","Component","extendObservable","loading","isLoggedIn","username","InputField","type","placeholder","value","onChange","e","target","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","a","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","autoComplete","setInputValue","doLogin","login","doLogout","width","src","logo","alt","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db26656a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass SubmitButton extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form\">\r\n\r\n                <button\r\n                    className=\"btn\"\r\n                    disabled={this.props.disabled}\r\n                    onClick={ () => this.props.onClick() }\r\n                >\r\n                    {this.props.text}\r\n                </button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SubmitButton;\r\n","import { extendObservable } from \"mobx\";\r\n\r\n/*\r\n* Login Store\r\n*  */\r\n\r\nclass userStore {\r\n    constructor() {\r\n        extendObservable(this,  {\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username: ''\r\n        });\r\n    }\r\n}\r\n\r\nexport default new userStore();","import React from 'react';\r\nimport UserStore from \"./UserStore\";\r\n\r\nclass InputField extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"form\">\r\n                <input\r\n                    className='input'\r\n                    type={this.props.type}\r\n                    placeholder={this.props.placeholder}\r\n                    value={this.props.value}\r\n                    onChange={ (e) => this.props.onChange(e.target.value) }\r\n                />\r\n        </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputField;\r\n","import React from 'react';\r\nimport InputField from './InputField'\r\nimport SubmitButton from \"./SubmitButton\";\r\nimport UserStore from \"./UserStore\";\r\n\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            buttonDisabled: false\r\n        }\r\n    }\r\n\r\n    setInputValue(property, val) {\r\n        val = val.trim();\r\n        if(val.length > 12) {\r\n            return;\r\n        }\r\n        this.setState( {\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n    resetForm() {\r\n        this.setState({\r\n            username: '',\r\n            password: '',\r\n            buttonDisabled: false\r\n        })\r\n    }\r\n\r\n    async doLogin() {\r\n\r\n        if(!this.state.username) {\r\n            return;\r\n        }\r\n        if(!this.state.password) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            buttonDisabled: true\r\n        })\r\n\r\n        try {\r\n            let res = await fetch('/login', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept' : 'application/json',\r\n                    'Content-Type' : 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    username: this.state.username,\r\n                    password: this.state.password\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n            if (result && result.success) {\r\n                UserStore.isLoggedIn = true;\r\n                UserStore.username = result.username;\r\n            }\r\n\r\n            else if (result && result.success === false) {\r\n                this.resetForm();\r\n                alert(result.msg);\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n            this.resetForm();\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"form\">Student Portal</div>\r\n                <InputField\r\n                    autoComplete=\"email\"\r\n                    type={this.props.type}\r\n                    placeholder={'E-Mail'}\r\n                    value={this.state.username ? this.state.username : ''}\r\n                    onChange={ (val) => this.setInputValue('username', val) }\r\n                />\r\n                <InputField\r\n                    type='password'\r\n                    placeholder='Password'\r\n                    value={this.state.password ? this.state.password : ''}\r\n                    onChange={ (val) => this.setInputValue('password', val) }\r\n                />\r\n                <SubmitButton\r\n                        text='Login'\r\n                        disabled={this.state.buttonDisabled}\r\n                        onClick={ () => this.doLogin() }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;\r\n","export default __webpack_public_path__ + \"static/media/tav.51c36cdd.png\";","import React from 'react';\nimport { observer } from 'mobx-react'\nimport SubmitButton from \"./stores/SubmitButton\";\nimport UserStore from \"./stores/UserStore\";\nimport LoginForm from \"./stores/LoginForm\";\nimport './loginpage.css'\nimport logo from \"./tav.png\";\n\n\n\n\n\nclass login extends React.Component {\n\n    //async login function\n    async  componentDidMount() {\n\n        try {\n            let res = await fetch('/isLoggedIn', {\n               method: 'post',\n               headers: {\n                   'Accept' : 'application/json',\n                   'Content-Type': 'application/json'\n               }\n            });\n\n            let result = await res.json ();\n\n            if (result && result.success) {\n                UserStore.loading = false;\n                UserStore.isLoggedIn = true;\n                UserStore.username = result.username;\n\n            }\n\n            else {\n                UserStore.loading = false;\n                UserStore.isLoggedIn = false;\n            }\n        }\n\n        catch(e) {\n            UserStore.loading = false;\n            UserStore.isLoggedIn = false;\n        }\n    }\n\n    //async logout function\n    async  doLogout() {\n\n        try {\n            let res = await fetch('/logout', {\n                method: 'post',\n                headers: {\n                    'Accept' : 'application/json',\n                    'Content-type': 'application/json'\n                }\n            });\n\n            let result = await res.json ();\n\n            if (result && result.success) {\n                UserStore.isLoggedIn = false;\n                UserStore.username = '';\n\n            }\n\n        }\n\n        catch(e) {\n            console.log(e);\n        }\n    }\n\n    render() {\n\n        if(UserStore.loading) {\n            return (\n                <div className=\"login-root\">\n                    <div className='login-container'>\n                       Loading, Please wait...\n                    </div>\n                </div>\n            );\n        }\n        else {\n            if (UserStore.isLoggedIn) {\n                return (\n                    <div className=\"login-root\">\n                        <div className='login-container'>\n                            Welcome {UserStore.username}\n                            <SubmitButton\n                                text={'Log Out'}\n                                disabled={false}\n                                onClick={ () => this.doLogout() }\n                            />\n                        </div>\n                    </div>\n                );\n            }\n            return (\n                <div className=\"login-root\">\n                    <div  className='login-container'>\n                        <img width={150} src={logo} alt=\"No3rd Logo\"/>\n                        <LoginForm/>\n                    </div>\n                </div>\n            );\n        }\n  }\n}\n\nexport default observer(login);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './login';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}